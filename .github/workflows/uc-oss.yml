# .github/workflows/uc.yml
name: uc-oss

on:
  pull_request:  # for testing
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  schedule:
    # Run this workflow daily at 13:00 UTC
    - cron: "0 13 * * *"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}

env:
  MLFLOW_HOME: /home/runner/work/mlflow/mlflow

jobs:
  uc-oss-integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'schedule' && github.repository == 'mlflow-automation/mlflow') || (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event_name == 'schedule' && 'mlflow/mlflow' || github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          submodules: recursive
      - uses: ./.github/actions/free-disk-space
      - name: Check diff
        id: check-diff
        if: github.event_name == 'pull_request'
        run: |
          REPO="${{ github.repository }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          BASE_REF="${{ github.base_ref }}"
          CHANGED_FILES=$(python dev/list_changed_files.py --repository $REPO --pr-num $PR_NUMBER | grep "tests/examples\|examples" || true);
          EXAMPLES_CHANGED=$([[ ! -z "$CHANGED_FILES" ]] && echo "true" || echo "false")

          echo -e "CHANGED_FILES:\nCHANGED_FILES"
          echo "EXAMPLES_CHANGED: $EXAMPLES_CHANGED"
          echo "examples_changed=$EXAMPLES_CHANGED" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/setup-python
      - uses: ./.github/actions/setup-pyenv

      - name: Install dependencies
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || steps.check-diff.outputs.examples_changed == 'true' }}
        run: |
          source ./dev/install-common-deps.sh --ml
          pip install fastapi uvicorn tf-keras

      # Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Use Temurin distribution of OpenJDK

      # Clone UnityCatalog at tag v0.2.0
      - name: Clone UnityCatalog at tag v0.2.0
        run: |
          git clone --branch v0.2.0 --depth 1 https://github.com/unitycatalog/unitycatalog.git

      # Start the mlflow server
      - name: Start mlflow tracking server
        run: |
          mlflow ui

      # Start the uc-oss server
      - name: Start mlflow tracking server
        run: |
          unitycatalog/bin/start-uc-server

      # Run tests or perform actions for UnityCatalog
      - name: Run tests for UnityCatalog
        working-directory: unitycatalog
        run: |
          echo "Running tests for UnityCatalog..."
          # Replace with actual test commands for UnityCatalog
          # Example: pytest tests/
